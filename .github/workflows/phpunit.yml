name: PHPUnit

on:
    push:
        paths:
            - '**.php'
            - 'phpunit.xml'
            - '.github/workflows/phpunit.yml'
            - 'composer.lock'
jobs:
    phpunit:
        name: PHPUnit
        runs-on: 'ubuntu-20.04'

        env:
            extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
        steps:
            -   uses: actions/checkout@v2

            -   name: Setup cache environment
                id: extcache
                uses: shivammathur/cache-extensions@v1
                with:
                    php-version: '8.0'
                    extensions: ${{ env.extensions }}
                    key: extensions-${{ hashFiles('composer.lock') }}

            -   name: Cache extensions
                uses: actions/cache@v2
                with:
                    path: ${{ steps.extcache.outputs.dir }}
                    key: ${{ steps.extcache.outputs.key }}
                    restore-keys: ${{ steps.extcache.outputs.key }}

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.2.4'
                    extensions: ${{ env.extensions }}
                    coverage: none

            -   name: Create database
                run: |
                    sudo /etc/init.d/mysql start
                    mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root -proot mysql
                    mysql  -u root -proot -e 'CREATE DATABASE IF NOT EXISTS testing_laravel_tests;'

            -   name: Cache composer dependencies
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: composer-${{ hashFiles('composer.lock') }}

            -   name: Run composer install
                run: composer install -n --prefer-dist
                env:
                    COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}

            -   name: Prepare Laravel Application
                run: |
                    cp .env.ci .env
                    php artisan key:generate

            -   name: Run PHPUnit
                run: php artisan test --parallel
                env:
                    DB_PASSWORD: root
